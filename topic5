-- Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение”


-- 1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.

UPDATE users SET created_at = NOW(), updated_at = NOW();


-- 2. Таблица users была неудачно спроектирована. Записи created_at и updated_at 
-- были заданы типом VARCHAR в них долгое время помещались значения в формате "20.10.2017 8:10". 
-- Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.

UPDATE users SET created_at = STR_TO_DATE(created_at, "%d.%m.%Y %k:%i"), updated_at = STR_TO_DATE(updated_at, "%d.%m.%Y %k:%i");
ALTER TABLE users CHANGE created_at created_at DATETIME DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE users CHANGE updated_at updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;


-- 3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0,
-- если товар закончился и выше нуля, если на складе имеются запасы. 
-- Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. 
-- Однако, нулевые запасы должны выводиться в конце, после всех записей.

-- Первый вариант
SELECT * FROM stock ORDER BY IF(value > 0, 0, 1), value;
-- Более короткий вариант
SELECT * FROM stock ORDER BY value = 0, value;


-- 4. Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. 
-- Месяцы заданы в виде списка английских названий ('may', 'august')

SELECT name FROM users WHERE DATE_FORMAT(birthday_at, '%M') IN ('may', 'august');


-- 5. Из таблицы catalogs извлекаются записи при помощи запроса.
-- SELECT * FROM catalogs WHERE id IN (5, 1, 2);
-- Отсортируйте записи в порядке, заданном в списке IN.

SELECT * FROM catalogs WHERE id IN (5, 1, 2) ORDER BY FIELD(id, 5, 1, 2);


-- Практическое задание теме “Агрегация данных”


-- 1. Подсчитайте средний возраст пользователей в таблице users

-- Первый вариант
SELECT AVG(YEAR(NOW()) - Year(birthday_at)) FROM users;
-- Второй вариант
SELECT AVG(TIMESTAMPDIFF(YEAR, birthday_at, NOW())) AS age FROM users;

-- 2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. 
-- Следует учесть, что необходимы дни недели текущего года, а не года рождения.

-- Первый вариант
SELECT COUNT(*) FROM users GROUP BY WEEKDAY(CONCAT(YEAR(NOW()), SUBSTRING(birthday_at, 5, 9)));
-- Второй вариант
SELECT
  DATE_FORMAT(DATE(CONCAT_WS('-', YEAR(NOW()), MONTH(birthday_at), DAY(birthday_at))), '%W') AS day,
  COUNT(*) AS total
FROM
  users
GROUP BY
  day
ORDER BY
  total DESC;
  
  
-- 3. Подсчитайте произведение чисел в столбце таблицы

SELECT ROUND(EXP(SUM(LN(id)))) FROM catalogs;
