-- Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение”


-- 1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.

UPDATE users SET created_at = NOW(), updated_at = NOW();


-- 2. Таблица users была неудачно спроектирована. Записи created_at и updated_at 
-- были заданы типом VARCHAR в них долгое время помещались значения в формате "20.10.2017 8:10". 
-- Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.

UPDATE users SET created_at = STR_TO_DATE(created_at, "%d.%m.%Y %k:%i"), updated_at = STR_TO_DATE(updated_at, "%d.%m.%Y %k:%i");


-- 3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0,
-- если товар закончился и выше нуля, если на складе имеются запасы. 
-- Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. 
-- Однако, нулевые запасы должны выводиться в конце, после всех записей.

(SELECT * FROM stock WHERE qty > 0 ORDER BY qty) UNION (SELECT * FROM stock WHERE qty = 0);




-- Практическое задание теме “Агрегация данных”


-- 1. Подсчитайте средний возраст пользователей в таблице users

SELECT AVG(YEAR(NOW()) - Year(birthday_at)) FROM users;


-- 2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. 
-- Следует учесть, что необходимы дни недели текущего года, а не года рождения.

SELECT COUNT(*) FROM users GROUP BY WEEKDAY(CONCAT(YEAR(NOW()), SUBSTRING(birthday_at, 5, 9)));
